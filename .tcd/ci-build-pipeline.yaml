## - Pipeline name
name: ci-build-pipeline

## - Condition for running workflows
# Inspiring from
# - Gitlab-CI rules(https://docs.gitlab.com/ee/ci/yaml/#rules)
# - GitHub Action on (https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on)
# Condition valid when at lease one of these valid
when:
  push:
    - type: branch
      matcher: glob
      value: deploy/*
      changes:
        - 'Dockerfile'
        - '**.py'
    - type: tag
      matcher: semver
    - type: tag
      matcher: glob
      value: deploy-*
    - type: tag
      matcher: glob
      value: test-*
      changes:
        - 'Dockerfile'
        - 'requirements.txt'
    - type: branch
      matcher: glob
      value: test/*
      changes:
        - 'Dockerfile'
        - 'requirements.txt'


## - Pipeline tasks
##  https://argoproj.github.io/argo-workflows/fields/#dagtask
tasks:
  - name: checkout
    templateRef:
      name: git
      template: checkout

  - name: build-image
    depends: checkout
    templateRef:
      name: container
      template: build
    arguments:
      artifacts:
        - name: src
          from: "{{tasks.checkout.outputs.artifacts.src}}"
      parameters:
        - name: registry
          value: tcr.tks.trueidc.com/sandbox-private

  - name: build-result
    depends: build-image
    template: echo
    arguments:
      parameters:
        - name: message
          value: "Successful build"

## - Array of reusable templates
# https://argoproj.github.io/argo-workflows/fields/#template
templates:
  - name: echo
    inputs:
      parameters:
        - name: message
          value: ""
    script:
      image: alpine
      command: [/bin/sh]
      source: |
        echo "{{inputs.parameters.message}}"